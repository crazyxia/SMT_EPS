<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jimi.smt.eps_server.mapper.StockLogMapper" >
  <resultMap id="BaseResultMap" type="com.jimi.smt.eps_server.entity.StockLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="timestamp" property="timestamp" jdbcType="VARCHAR" />
    <result column="material_no" property="materialNo" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="operator" property="operator" jdbcType="VARCHAR" />
    <result column="operation_time" property="operationTime" jdbcType="TIMESTAMP" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="custom" property="custom" jdbcType="VARCHAR" />
    <result column="target_work_order" property="targetWorkOrder" jdbcType="VARCHAR" />
    <result column="target_line" property="targetLine" jdbcType="VARCHAR" />
    <result column="target_board_type" property="targetBoardType" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, timestamp, material_no, quantity, operator, operation_time, position, custom, 
    target_work_order, target_line, target_board_type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jimi.smt.eps_server.entity.StockLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitSize&gt;=0">
      limit #{limitStart}, #{limitSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stock_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stock_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jimi.smt.eps_server.entity.StockLogExample" >
    delete from stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jimi.smt.eps_server.entity.StockLog" >
    insert into stock_log (id, timestamp, material_no, 
      quantity, operator, operation_time, 
      position, custom, target_work_order, 
      target_line, target_board_type)
    values (#{id,jdbcType=INTEGER}, #{timestamp,jdbcType=VARCHAR}, #{materialNo,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, #{operationTime,jdbcType=TIMESTAMP}, 
      #{position,jdbcType=VARCHAR}, #{custom,jdbcType=VARCHAR}, #{targetWorkOrder,jdbcType=VARCHAR}, 
      #{targetLine,jdbcType=VARCHAR}, #{targetBoardType,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jimi.smt.eps_server.entity.StockLog" >
    insert into stock_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="timestamp != null" >
        timestamp,
      </if>
      <if test="materialNo != null" >
        material_no,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="operator != null" >
        operator,
      </if>
      <if test="operationTime != null" >
        operation_time,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="custom != null" >
        custom,
      </if>
      <if test="targetWorkOrder != null" >
        target_work_order,
      </if>
      <if test="targetLine != null" >
        target_line,
      </if>
      <if test="targetBoardType != null" >
        target_board_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="timestamp != null" >
        #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="materialNo != null" >
        #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="custom != null" >
        #{custom,jdbcType=VARCHAR},
      </if>
      <if test="targetWorkOrder != null" >
        #{targetWorkOrder,jdbcType=VARCHAR},
      </if>
      <if test="targetLine != null" >
        #{targetLine,jdbcType=VARCHAR},
      </if>
      <if test="targetBoardType != null" >
        #{targetBoardType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jimi.smt.eps_server.entity.StockLogExample" resultType="java.lang.Integer" >
    select count(*) from stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stock_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.timestamp != null" >
        timestamp = #{record.timestamp,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNo != null" >
        material_no = #{record.materialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null" >
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.operationTime != null" >
        operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.custom != null" >
        custom = #{record.custom,jdbcType=VARCHAR},
      </if>
      <if test="record.targetWorkOrder != null" >
        target_work_order = #{record.targetWorkOrder,jdbcType=VARCHAR},
      </if>
      <if test="record.targetLine != null" >
        target_line = #{record.targetLine,jdbcType=VARCHAR},
      </if>
      <if test="record.targetBoardType != null" >
        target_board_type = #{record.targetBoardType,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stock_log
    set id = #{record.id,jdbcType=INTEGER},
      timestamp = #{record.timestamp,jdbcType=VARCHAR},
      material_no = #{record.materialNo,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      operation_time = #{record.operationTime,jdbcType=TIMESTAMP},
      position = #{record.position,jdbcType=VARCHAR},
      custom = #{record.custom,jdbcType=VARCHAR},
      target_work_order = #{record.targetWorkOrder,jdbcType=VARCHAR},
      target_line = #{record.targetLine,jdbcType=VARCHAR},
      target_board_type = #{record.targetBoardType,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jimi.smt.eps_server.entity.StockLog" >
    update stock_log
    <set >
      <if test="timestamp != null" >
        timestamp = #{timestamp,jdbcType=VARCHAR},
      </if>
      <if test="materialNo != null" >
        material_no = #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="operator != null" >
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operationTime != null" >
        operation_time = #{operationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="custom != null" >
        custom = #{custom,jdbcType=VARCHAR},
      </if>
      <if test="targetWorkOrder != null" >
        target_work_order = #{targetWorkOrder,jdbcType=VARCHAR},
      </if>
      <if test="targetLine != null" >
        target_line = #{targetLine,jdbcType=VARCHAR},
      </if>
      <if test="targetBoardType != null" >
        target_board_type = #{targetBoardType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jimi.smt.eps_server.entity.StockLog" >
    update stock_log
    set timestamp = #{timestamp,jdbcType=VARCHAR},
      material_no = #{materialNo,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operation_time = #{operationTime,jdbcType=TIMESTAMP},
      position = #{position,jdbcType=VARCHAR},
      custom = #{custom,jdbcType=VARCHAR},
      target_work_order = #{targetWorkOrder,jdbcType=VARCHAR},
      target_line = #{targetLine,jdbcType=VARCHAR},
      target_board_type = #{targetBoardType,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <insert id="insertList" parameterType="java.util.List" >
    insert into stock_log (id, timestamp, material_no, 
      quantity, operator, operation_time, 
      position, custom, production_date, target_work_order, 
      target_line, target_board_type)
    values 
    <foreach collection="list" item="item" index= "index" separator =",">
    (#{item.id,jdbcType=INTEGER}, #{item.timestamp,jdbcType=VARCHAR}, #{item.materialNo,jdbcType=VARCHAR}, 
      #{item.quantity,jdbcType=INTEGER}, #{item.operator,jdbcType=VARCHAR}, #{item.operationTime,jdbcType=TIMESTAMP}, 
      #{item.position,jdbcType=VARCHAR}, #{item.custom,jdbcType=VARCHAR}, #{item.productionDate,jdbcType=TIMESTAMP}, #{item.targetWorkOrder,jdbcType=VARCHAR}, 
      #{item.targetLine,jdbcType=VARCHAR}, #{item.targetBoardType,jdbcType=INTEGER})
    </foreach>
  </insert>
</mapper>