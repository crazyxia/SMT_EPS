<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimi.smt.eps_server.mapper.ProgramItemMapper" >
  <resultMap id="BaseResultMap" type="com.jimi.smt.eps_server.entity.ProgramItem" >
    <id column="program_id" property="programId" jdbcType="VARCHAR" />
    <id column="lineseat" property="lineseat" jdbcType="VARCHAR" />
    <id column="material_no" property="materialNo" jdbcType="VARCHAR" />
    <result column="alternative" property="alternative" jdbcType="BIT" />
    <result column="specitification" property="specitification" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="quantity" property="quantity" jdbcType="INTEGER" />
    <result column="serial_no" property="serialNo" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="selectProgramItemMap" type="com.jimi.smt.eps_server.entity.ProgramItem" >
    <id column="program_id" property="programId" jdbcType="VARCHAR" />
    <id column="lineseat" property="lineseat" jdbcType="VARCHAR" />
    <id column="material_no" property="materialNo" jdbcType="VARCHAR" />
    <result column="alternative" property="alternative" jdbcType="BIT" />    
    <result column="serial_no" property="serialNo" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    program_id, lineseat, material_no, alternative, specitification, position, quantity, 
    serial_no
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jimi.smt.eps_server.entity.ProgramItemExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from program_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>   
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="com.jimi.smt.eps_server.entity.ProgramItemKey" >
    select 
    <include refid="Base_Column_List" />
    from program_item
    where program_id = #{programId,jdbcType=VARCHAR}
      and lineseat = #{lineseat,jdbcType=VARCHAR}
      and material_no = #{materialNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.jimi.smt.eps_server.entity.ProgramItemKey" >
    delete from program_item
    where program_id = #{programId,jdbcType=VARCHAR}
      and lineseat = #{lineseat,jdbcType=VARCHAR}
      and material_no = #{materialNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jimi.smt.eps_server.entity.ProgramItemExample" >
    delete from program_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jimi.smt.eps_server.entity.ProgramItem" >
    insert into program_item (program_id, lineseat, material_no, 
      alternative, specitification, position, 
      quantity, serial_no)
    values (#{programId,jdbcType=VARCHAR}, #{lineseat,jdbcType=VARCHAR}, #{materialNo,jdbcType=VARCHAR}, 
      #{alternative,jdbcType=BIT}, #{specitification,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, 
      #{quantity,jdbcType=INTEGER}, #{serialNo,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.jimi.smt.eps_server.entity.ProgramItem" >
    insert into program_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="programId != null" >
        program_id,
      </if>
      <if test="lineseat != null" >
        lineseat,
      </if>
      <if test="materialNo != null" >
        material_no,
      </if>
      <if test="alternative != null" >
        alternative,
      </if>
      <if test="specitification != null" >
        specitification,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="quantity != null" >
        quantity,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="programId != null" >
        #{programId,jdbcType=VARCHAR},
      </if>
      <if test="lineseat != null" >
        #{lineseat,jdbcType=VARCHAR},
      </if>
      <if test="materialNo != null" >
        #{materialNo,jdbcType=VARCHAR},
      </if>
      <if test="alternative != null" >
        #{alternative,jdbcType=BIT},
      </if>
      <if test="specitification != null" >
        #{specitification,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        #{quantity,jdbcType=INTEGER},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jimi.smt.eps_server.entity.ProgramItemExample" resultType="java.lang.Long" >
    select count(*) from program_item
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update program_item
    <set >
      <if test="record.programId != null" >
        program_id = #{record.programId,jdbcType=VARCHAR},
      </if>
      <if test="record.lineseat != null" >
        lineseat = #{record.lineseat,jdbcType=VARCHAR},
      </if>
      <if test="record.materialNo != null" >
        material_no = #{record.materialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.alternative != null" >
        alternative = #{record.alternative,jdbcType=BIT},
      </if>
      <if test="record.specitification != null" >
        specitification = #{record.specitification,jdbcType=VARCHAR},
      </if>
      <if test="record.position != null" >
        position = #{record.position,jdbcType=VARCHAR},
      </if>
      <if test="record.quantity != null" >
        quantity = #{record.quantity,jdbcType=INTEGER},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update program_item
    set program_id = #{record.programId,jdbcType=VARCHAR},
      lineseat = #{record.lineseat,jdbcType=VARCHAR},
      material_no = #{record.materialNo,jdbcType=VARCHAR},
      alternative = #{record.alternative,jdbcType=BIT},
      specitification = #{record.specitification,jdbcType=VARCHAR},
      position = #{record.position,jdbcType=VARCHAR},
      quantity = #{record.quantity,jdbcType=INTEGER},
      serial_no = #{record.serialNo,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jimi.smt.eps_server.entity.ProgramItem" >
    update program_item
    <set >
      <if test="alternative != null" >
        alternative = #{alternative,jdbcType=BIT},
      </if>
      <if test="specitification != null" >
        specitification = #{specitification,jdbcType=VARCHAR},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="quantity != null" >
        quantity = #{quantity,jdbcType=INTEGER},
      </if>
      <if test="serialNo != null" >
        serial_no = #{serialNo,jdbcType=INTEGER},
      </if>
    </set>
    where program_id = #{programId,jdbcType=VARCHAR}
      and lineseat = #{lineseat,jdbcType=VARCHAR}
      and material_no = #{materialNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jimi.smt.eps_server.entity.ProgramItem" >
    update program_item
    set alternative = #{alternative,jdbcType=BIT},
      specitification = #{specitification,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      quantity = #{quantity,jdbcType=INTEGER},
      serial_no = #{serialNo,jdbcType=INTEGER}
    where program_id = #{programId,jdbcType=VARCHAR}
      and lineseat = #{lineseat,jdbcType=VARCHAR}
      and material_no = #{materialNo,jdbcType=VARCHAR}
  </update>
  <select id="selectProgramItem" parameterType="java.lang.String" resultMap="selectProgramItemMap" >
    select
    program_id,lineseat,material_no,alternative,serial_no
    from program_item
    where program_id = #{programId,jdbcType=VARCHAR}
    order by lineseat,serial_no,material_no
  </select>
</mapper>